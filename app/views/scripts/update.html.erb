#!/bin/bash

set -e
set -o pipefail

<% if @current_proxy.needs_setup? %>
curl -s -S -H 'Authorization: Bearer <%= @current_proxy.api_key %>' https://cdn.kodos.zrail.net/setup | bash
<% else %>

<% if @should_update %>
cd /etc/nginx

curl -s -S -H 'Authorization: Bearer <%= @current_proxy.api_key %>' https://cdn.kodos.zrail.net/certificates > certificates.zip
unzip -qq -o certificates.zip

<% unless @current_proxy.certificates_only? %>
curl -s -S -H 'Authorization: Bearer <%= @current_proxy.api_key %>' https://cdn.kodos.zrail.net/configurations > /tmp/proxies.conf
if [[ -s /tmp/proxies.conf ]]; then
    mv /tmp/proxies.conf sites-enabled/proxies.conf
fi
<% end %>

<% Site.configurable.where(push: true).each do |site| %>
mkdir -p /var/www/site-<% site.id %>
<% end %>

systemctl restart nginx
<% end %>

<% Site.where("s3_bucket is not null and s3_bucket != ''").each do |site| %>
mkdir -p /var/www/site-<%= site.id %>
s3cmd --access_key='<%= site.s3_access_key_id %>' --secret_key='<%= site.s3_secret_access_key %>' sync --delete-removed s3://<%= site.s3_bucket %>/ /var/www/site-<%= site.id %>/
<% end %>

<% end %>

true
