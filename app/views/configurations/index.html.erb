proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=sites_cache:10m max_size=20g 
                 inactive=2y use_temp_path=off;

<%- Site.configurable.find_each do |site| -%>

<% if site.upstream.present? %>
upstream <%= site.upstream_name %> {
  server <%= site.upstream_server %> fail_timeout=0;

  keepalive 16;
}
<% end %>

server {
  listen 80;
  listen 443 ssl http2;

  listen [::]:80;
  listen [::]:443 ssl http2;

  ssl_certificate /etc/nginx/certificates/site-<%= site.id %>/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/site-<%= site.id %>/privkey.pem;

  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

  ssl_dhparam /etc/nginx/dhparam.pem;

  server_name <%= site.primary_server_name %>;

  if ($ssl_protocol = "") {
     rewrite ^(.*)$ https://$server_name$request_uri? permanent;
  }

  gzip off;

  location / {
    <% if site.upstream.present? %>
    proxy_http_version 1.1;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_redirect off;

    proxy_cache sites_cache;
    proxy_cache_revalidate on;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    proxy_cache_lock on;

    add_header X-Cache-Status $upstream_cache_status;

    proxy_cache_key $scheme$http_host$proxy_host$request_uri;
  
    proxy_pass <%= site.upstream_scheme %>://<%= site.upstream_name %>; 
    <% else %>
    root /var/www/site-<%= site.id %>;
    try_files $uri/index.html $uri/index $uri.html $uri =404;

    expires 5m;
    add_header Pragma public;
    add_header Cache-Control "public, max-age=300";
    <% end %>
  }
}

<% if site.secondary_server_name.length > 0 %>
server {
  listen 80;
  listen 443 ssl http2;

  listen [::]:80;
  listen [::]:443 ssl http2;

  ssl_certificate /etc/nginx/certificates/site-<%= site.id %>/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/site-<%= site.id %>/privkey.pem;

  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

  ssl_dhparam /etc/nginx/dhparam.pem;

  server_name <%= site.secondary_server_name %>;
  return 301 https://<%= site.primary_server_name%>$request_uri;
}
<% end %>

<% end %>
