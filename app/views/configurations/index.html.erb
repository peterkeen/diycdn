proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=sites_cache:10m max_size=20g 
                 inactive=2y use_temp_path=off;

limit_req_zone $binary_remote_addr zone=remoteaddr:10m rate=30r/m;
limit_req zone=remoteaddr burst=10 nodelay;

<%- Site.configurable.find_each do |site| -%>

<% if site.upstream.present? %>
upstream <%= site.upstream_name %> {
  server <%= site.upstream_server %> fail_timeout=0;

  keepalive 16;
}
<% end %>

server {
  listen 80;
  listen 443 ssl http2;

  listen [::]:80;
  listen [::]:443 ssl http2;

  server_tokens off;

  access_log /var/log/nginx/site-<%= site.id %>-access.log combined buffer=2k;
  error_log  /var/log/nginx/site-<%= site.id %>-error.log;

  ssl_certificate /etc/nginx/certificates/site-<%= site.id %>/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/site-<%= site.id %>/privkey.pem;

  ssl_protocols TLSv1.3 TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
  ssl_prefer_server_ciphers on; 

  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
  ssl_ecdh_curve secp384r1;

  ssl_dhparam /etc/nginx/dhparam.pem;

  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 1.1.1.1 8.8.8.8 valid=60s;
  resolver_timeout 5s; 

  server_name <%= site.primary_server_name %>;

  if ($ssl_protocol = "") {
     rewrite ^(.*)$ https://$server_name$request_uri? permanent;
  }

  gzip off;

  location / {
    <% if site.upstream.present? %>
    proxy_http_version 1.1;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    <% if site.skip_host_header %>
    proxy_set_header Host <%= URI(site.upstream).hostname %>;
    <% else %>
    proxy_set_header Host $http_host;
    <% end %>
    proxy_set_header X-NginX-Proxy true;
    proxy_redirect off;

    proxy_cache sites_cache;
    proxy_cache_revalidate on;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    proxy_cache_lock on;

    add_header X-Cache-Status $upstream_cache_status;

    proxy_cache_key $scheme$http_host$proxy_host$request_uri;

    # Enables WS support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass <%= site.upstream_scheme %>://<%= site.upstream_name %>; 
    <% else %>
    root /var/www/site-<%= site.id %>;
    try_files $uri/index.html $uri/index $uri.html $uri =404;

    expires 5m;
    add_header Pragma public;
    add_header Cache-Control "public, max-age=300";
    <% end %>
  }
}

<% if site.secondary_server_name.length > 0 %>
server {
  listen 80;
  listen 443 ssl http2;

  listen [::]:80;
  listen [::]:443 ssl http2;

  server_tokens off;

  ssl_certificate /etc/nginx/certificates/site-<%= site.id %>/fullchain.pem;
  ssl_certificate_key /etc/nginx/certificates/site-<%= site.id %>/privkey.pem;

  ssl_protocols TLSv1.3 TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
  ssl_prefer_server_ciphers on; 

  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
  ssl_ecdh_curve secp384r1;

  ssl_dhparam /etc/nginx/dhparam.pem;

  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 1.1.1.1 8.8.8.8 valid=60s;
  resolver_timeout 5s; 

  server_name <%= site.secondary_server_name %>;
  return 301 https://<%= site.primary_server_name%>$request_uri;
}
<% end %>

<% end %>
